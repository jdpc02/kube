# -*- mode: ruby -*-
# vi: set ft=ruby :

kubes = [
    {
        :name => "kube-master",
        :role => "master",
        :itsip => "192.168.71.51"
    }#,
    #{
    #    :name => "kube-node1",
    #    :role => "compute",
    #    :itsip => "192.168.71.61"
    #},
    #{
    #    :name => "kube-node2",
    #    :role => "compute",
    #    :itsip => "192.168.71.62"
    #}
]

# Installing on all node types
$cfgcommon = <<-SCRIPT
  echo 'Starting common config'

  echo 'Create yum repo for kubernetes'
  cat > /etc/yum.repos.d/kubernetes.repo <<EOF
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kube*
EOF

  echo 'Create sysctl call for kubernetes'
  cat > /etc/sysctl.d/k8s.conf <<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

  echo 'Set SELinux in permissive mode (effectively disabling it)'
  sudo setenforce 0
  sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

  echo 'Disabling swap'
  sudo swapoff -a
  sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

  echo 'Updating the nodes'
  sudo yum update -y

  echo 'Installing the necessary kubernetes packages'
  sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

  echo 'Starting Docker Setup'
  sudo yum install -y yum-utils device-mapper-persistent-data lvm2

  echo 'Add docker repo'
  sudo yum-config-manager \
    --add-repo https://download.docker.com/linux/centos/docker-ce.repo

  echo 'Install DockerCE'
  sudo yum install -y docker-ce-18.06.2.ce

  echo 'Setup docker daemon'
  sudo mkdir /etc/docker
  cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2",
  "storage-opts": [
    "overlay2.override_kernel_check=true"
  ]
}
EOF
  mkdir -p /etc/systemd/system/docker.service.d
  sudo systemctl daemon-reload
  sudo systemctl restart docker
  echo 'Completed Docker Setup'

  echo 'Finishing up'
  sudo sysctl --system
  sudo systemctl enable --now kubelet
  echo 'Finished common config'
SCRIPT

# Installing on all master nodes
$cfgmaster = <<-SCRIPT
SCRIPT

# Installing on all compute nodes
$cfgcompute = <<-SCRIPT
SCRIPT


Vagrant.configure(2) do |config|
  config.vm.box = "centos/7"
  config.vm.boot_timeout = 300

  kubes.each do |dokube|
    config.vm.define dokube[:name] do |node|
      node.vm.hostname = dokube[:name]
      node.vm.network :private_network, ip: dokube[:itsip]
      node.vm.provider "virtualbox" do |a|
        a.name = dokube[:name]
        a.customize ["modifyvm", :id, "--groups", "/localkube"]
        if dokube[:role] == "master"
          a.memory = 2048
          a.cpus = 2
        else
          a.memory = 2048
          a.cpus = 2
        end
        a.gui = false
      end
      node.vm.provision "shell", inline: $cfgcommon
      if dokube[:role] == "master"
        node.vm.provision "shell", inline: $cfgmaster
      else
        node.vm.provision "shell", inline: $cfgcompute
      end
    end
  end
end
